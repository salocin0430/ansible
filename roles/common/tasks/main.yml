---
- name: Disable SELinux
  selinux:
    state: disabled

- name: Disable swap
  command: swapoff -a
  changed_when: false

- name: Remove swap from fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Load required kernel modules
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Set kernel parameters
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: /etc/sysctl.d/k8s.conf
  loop:
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }

- name: Add Docker repository
  yum_repository:
    name: docker
    description: Docker CE Repository
    baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
    gpgcheck: no

- name: Install containerd
  dnf:
    name: containerd.io
    state: present

- name: Configure containerd
  shell: |
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

- name: Start and enable containerd
  systemd:
    name: containerd
    state: started
    enabled: yes

- name: Add Kubernetes repository
  yum_repository:
    name: kubernetes
    description: Kubernetes Repository
    baseurl: https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-aarch64/
    gpgcheck: no

- name: Install Kubernetes packages
  dnf:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Enable kubelet
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Install Helm dependencies
  dnf:
    name:
      - git
      - tar
    state: present

- name: Download and install Helm
  shell: |
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh
  args:
    creates: /usr/local/bin/helm

- name: Install firewalld
  dnf:
    name: firewalld
    state: present

- name: Start and enable firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes

- name: Configure firewall for Kubernetes
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 6443/tcp    # Kubernetes API server
    - 2379-2380/tcp # etcd server client API
    - 10250/tcp   # Kubelet API
    - 10251/tcp   # kube-scheduler
    - 10252/tcp   # kube-controller-manager
    - 8472/udp    # Flannel VXLAN
    - 179/tcp     # Calico BGP
    - 4789/udp    # MetalLB L2 mode

- name: Configure firewall services
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - http
    - https

- name: Allow traffic between Kubernetes nodes
  firewalld:
    rich_rule: 'rule family=ipv4 source address=10.244.0.0/16 accept'
    permanent: yes
    state: enabled

- name: Allow MetalLB L2 traffic
  firewalld:
    rich_rule: 'rule family=ipv4 source address=192.168.0.0/24 accept'
    permanent: yes
    state: enabled

- name: Reload firewall
  command: firewall-cmd --reload 