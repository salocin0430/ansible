---
- name: Create NFS test manifest
  template:
    src: test-nfs.yaml.j2
    dest: /tmp/test-nfs.yaml
  tags:
    - nfs-test

- name: Apply NFS test manifest
  command: kubectl apply -f /tmp/test-nfs.yaml
  tags:
    - nfs-test

- name: Wait for PV and PVC to be bound
  shell: |
    kubectl get pv nfs-pv-test -o jsonpath='{.status.phase}'
  register: pv_status
  until: pv_status.stdout == "Bound"
  retries: 12
  delay: 5
  tags:
    - nfs-test

# Eliminar el pod existente si existe
- name: Delete existing test pod if any
  command: kubectl delete pod nfs-test --ignore-not-found=true
  tags:
    - nfs-test

- name: Create test pod with NFS mount
  copy:
    dest: /tmp/test-pod.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: nfs-test
      spec:
        containers:
        - name: busybox
          image: busybox
          command: ["sleep", "3600"]
          volumeMounts:
          - name: nfs-volume
            mountPath: /mnt
        volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: nfs-pvc-test
tags:
    - nfs-test

- name: Apply test pod
  command: kubectl apply -f /tmp/test-pod.yaml
tags:
    - nfs-test

- name: Wait for test pod to be ready
  shell: |
    kubectl wait --for=condition=ready pod/nfs-test --timeout=60s
tags:
    - nfs-test

- name: Test NFS write access
  shell: |
    kubectl exec nfs-test -- sh -c 'echo "test" > /mnt/test.txt'
  register: write_test
  ignore_errors: yes
tags:
    - nfs-test

- name: Show test results
  shell: |
    echo "PV Status:"
    kubectl get pv
    echo "PVC Status:"
    kubectl get pvc
    echo "Pod Status:"
    kubectl get pod nfs-test
    echo "NFS Test File Content:"
    kubectl exec nfs-test -- cat /mnt/test.txt || echo "File not found"
  register: test_results
tags:
    - nfs-test

- name: Display test results
  debug:
    var: test_results.stdout_lines 
tags:
    - nfs-test